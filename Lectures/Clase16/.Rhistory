cat("\014")
rm(list=ls())
graphics.off()
# Cargar paquete para cargar bases que no son de R.
# install.packages("foreign")
library(foreign) # significa "foraneo"
dat <- read.dta("cow.dta") # cargar base en  R (hasta el momento solo la habiamos descargado).
# Estimar modelo lineal: relacion entre crecimiento economico y democracia, controlando por poblacion
modelo.1 = lm(rgdpch ~ democracy + pop, dat)
# resumen del modelo
summary(modelo.1)
# resumen del modelo
options(scipen = 1000000)
summary(modelo.1)
10631.611789 - (1.96 * 754.563026)
confint(modelo.1, level = 0.95) # 95% de confianza
10631.611789 + (1.96 * 754.563026)
dat
# Estimar modelo lineal: relacion entre crecimiento economico y democracia, controlando por poblacion
modelo.1 = lm(repression ~ rgdpch + democracy, dat)
summary(modelo.1)
# Estimar modelo lineal: relacion entre crecimiento economico y democracia, controlando por poblacion
modelo.1 = lm(repression ~ rgdpch + pop, dat)
summary(modelo.1)
# Estimar modelo lineal: relacion entre crecimiento economico y democracia, controlando por poblacion
modelo.1 = lm(repression ~ democracy + pop, dat)
summary(modelo.1)
# plotear modelo
# install.packages("coefplot")
library(coefplot)
coefplot(modelo.1) # plot de coeficientes
# mostrar el detalle de los intervalos de confianza
confint(modelo.1)
# Estimar modelo lineal: relacion entre represion y democracia, controlando por poblacion.
# (1) Pensar por que seria importante "controlar por poblacion"?
modelo.1 = lm(democracy ~ pop, dat)
summary(modelo.1)
colnames(dat)
# Estimar modelo lineal: relacion entre represion y democracia, controlando por poblacion.
# (1) Pensar por que seria importante "controlar por poblacion"?
modelo.1 = lm(democracy ~ pop + rgdpch + , dat)
summary(modelo.1)
# Estimar modelo lineal: relacion entre represion y democracia, controlando por poblacion.
# (1) Pensar por que seria importante "controlar por poblacion"?
modelo.1 = lm(democracy ~ pop + rgdpch + , dat)
# Estimar modelo lineal: relacion entre represion y democracia, controlando por poblacion.
# (1) Pensar por que seria importante "controlar por poblacion"?
modelo.1 = lm(democracy ~ pop + rgdpch, dat)
summary(modelo.1)
colnames(dat)
# Estimar modelo lineal: relacion entre represion y democracia, controlando por poblacion.
# (1) Pensar por que seria importante "controlar por poblacion"?
modelo.1 = lm(democracy ~ pop + repression, dat)
summary(modelo.1)
# Estimar modelo lineal: relacion entre represion y democracia, controlando por poblacion.
# (1) Pensar por que seria importante "controlar por poblacion"?
modelo.1 = lm(democracy ~ repression + pop, dat)
summary(modelo.1)
# mostrar el detalle de los intervalos de confianza
confint(modelo.1)
# Estimar modelo lineal: relacion entre democracia y represion, controlando por poblacion.
# (1) Pensar por que seria importante "controlar por poblacion"?
modelo.1 = lm(democracy ~ repression, dat)
# Estimar modelo lineal: relacion entre democracia y represion, controlando por poblacion.
# (1) Pensar por que seria importante "controlar por poblacion"?
modelo.1 = lm(democracy ~ repression, dat)
summary(modelo.1)
# Estimar modelo lineal: relacion entre democracia y represion, controlando por poblacion.
# (1) Pensar por que seria importante "controlar por poblacion"?
modelo.1 = lm(democracy ~ pop, dat)
summary(modelo.1)
coefplot(modelo.1) # plot de coeficientes
# Estimar modelo lineal: relacion entre democracia y represion, controlando por poblacion.
# (1) Pensar por que seria importante "controlar por poblacion"?
modelo.1 = lm(pop ~ democracy , dat)
summary(modelo.1)
coefplot(modelo.1) # plot de coeficientes
colnames(dat)
# Modelo
modelo.1 = lm(pop ~ democracy + rgdpch , dat)
summary(modelo.1)
coefplot(modelo.1) # plot de coeficientes
colnames(dat)
# Modelo
modelo.1 = lm(pop ~ democracy + repression , dat)
summary(modelo.1)
coefplot(modelo.1) # plot de coeficientes
confint(modelo.1)
# Modelo
modelo.1 = lm(pop ~ democracy + repression , dat)
# resumen del modelo
options(scipen = 1000000) # apagar notacion cientifica.
summary(modelo.1)
# (1) Que podemos deducir de nuestro modelo? (Interpreta la tabla)
#################################################################
# Apliquemos lo que sabemos respecto a Intervalos de Confianza
#################################################################
# plotear modelo
# install.packages("coefplot")
library(coefplot)
coefplot(modelo.1) # plot de coeficientes
library(texreg)
screenreg(modelo.1)
library(effects)
plot(allEffects(modelo.1))
coefplot(modelo.1) # plot de coeficientes
coefplot(modelo.1) # plot de coeficientes
# Plotear modelo
# install.packages("coefplot")
library(coefplot)
coefplot(modelo.1) # plot de coeficientes
modelo.1 = lm(pop ~ democracy + repression , dat)
coefplot(modelo.1) # plot de coeficientes
coefplot(modelo.1) # plot de coeficientes
modelo.1
options(scipen = 1000000) # apagar notacion cientifica.
summary(modelo.1)
coefplot(modelo.1) # plot de coeficientes
confint(modelo.1)
lm(pop ~ democracy + repression , dat)
# Modelo
modelo.1 = lm(pop ~ democracy + repression, dat)
summary(modelo.1)
coefplot(modelo.1) # plot de coeficientes
?coefplot
library(coefplot)
coefplot(modelo.1) # plot de coeficientes
plotreg(modelo.1) # plot de coeficientes
detach("package:texreg", unload=TRUE)
plotreg(modelo.1) # plot de coeficientes
# Plotear modelo
# install.packages("coefplot")
library(coefplot)
plotreg(modelo.1) # plot de coeficientes
# Plotear modelo
# install.packages("coefplot")
library(coefplot)
coefplot(modelo.1) # plot de coeficientes
cat("\014")
rm(list=ls())
graphics.off()
library(foreign) # significa "foraneo"
dat <- read.dta("cow.dta") # cargar base en  R (hasta el momento solo la habiamos descargado).
# Hoy pensaremos en que factores ayudan a subir la poblacion en los paises.
# (1) Que relacion podria haber entre poblacion y democracia?
# (2) Que relacion podria haber entre poblacion y represion politica?
# Modelo
modelo.1 = lm(pop ~ democracy + repression, dat)
summary(modelo.1)
library(coefplot)
coefplot(modelo.1) # plot de coeficientes
# Veamos mas en detalle el problema...
# install.packages("effects")
library(effects)
plot(allEffects(modelo.1))
devtools::install_github("cardiomoon/webr")
install.packages(devtools)
install.packages("devtools")
# install.packages("devtools")
library(devtools)
install_github("cardiomoon/webr")
library(webr)
library(texreg)
screen(modelo.1)
screenreg(modelo.1)
screenreg(modelo.1, ci = T)
?screenreg
screenreg(modelo.1, ci.force = T)
screenreg(modelo.1, ci.force = c(T))
## Tabla convencional
screenreg(modelo.1, ci.force = F) # notan la diferencia?
summary(modelo.1)
pt(48303, nrow(dat)-2)
plot(pt(48303, nrow(dat)-2))
48303/19052
48303/19052
2345/6036
18707/15973
y = rnorm(1000, 0)
y
x1 = rnorm(1000, 10)
x2 = rnorm(1000, 20)
x3 = rnorm(1000, 30)
# El "VERDADERO MODELO": y es una combinacion lineal de todas las variables.
y = b0 + b1*x1 + b2*x2 + b3*x3 + e
# Inventemos las variables independientes
x1 = rnorm(1000, 10) # como nunca, conocemos que el promedio REAL de esta variable es 10
x2 = rnorm(1000, 20) # como nunca, conocemos que el promedio REAL de esta variable es 20
x3 = rnorm(1000, 30) # como nunca, conocemos que el promedio REAL de esta variable es 30
# Definamos que, como debiera ser, el error tiene promedio cero.
e = rnorm(1000, 0)
# Establecer el valor real de los betas
b0 = 0
b1 = 1
b2 = 2
b3 = 3
# El "VERDADERO MODELO": y es una combinacion lineal de todas las variables.
y = b0 + b1*x1 + b2*x2 + b3*x3 + e
summary(lm(y ~ x1 + x2 + x3))
b0 = 2
b1 = 1
b2 = 2
b3 = 3
# El "VERDADERO MODELO": y es una combinacion lineal de todas las variables.
y = b0 + b1*x1 + b2*x2 + b3*x3 + e
# Para comprobar, hagamos una regresion.
summary(lm(y ~ x1 + x2 + x3))
b1 = 1
b2 = 2
b3 = 3
# El "VERDADERO MODELO": y es una combinacion lineal de todas las variables.
y = b1*x1 + b2*x2 + b3*x3 + e
# Para comprobar, hagamos una regresion.
summary(lm(y ~ x1 + x2 + x3))
# Variable Omitida: Que pasa con nuestros coeficientes cuando se nos queda una
# variable afuera?
summary(lm(y ~ x1 + x2)) # sin sorpresa, los betas son los mismos que inventamos nosotros.
# Variable Omitida: Que pasa con nuestros coeficientes cuando se nos queda una
# variable afuera?
summary(lm(y ~ x1)) # sin sorpresa, los betas son los mismos que inventamos nosotros.
# Inventemos las variables independientes
x1 = rnorm(1000, 10) # como nunca, conocemos que el promedio REAL de esta variable es 10
x2 = rnorm(1000, 20) # como nunca, conocemos que el promedio REAL de esta variable es 20
x3 = rnorm(1000, 30) # como nunca, conocemos que el promedio REAL de esta variable es 30
# Definamos que, como debiera ser, el error tiene promedio cero.
e = rnorm(1000, 0)
# Establecer el valor real de los betas
b1 = 1
b2 = -100
b3 = 500
# El "VERDADERO MODELO": y es una combinacion lineal de todas las variables.
y = b1*x1 + b2*x2 + b3*x3 + e
# Hagamos una regresion.
summary(lm(y ~ x1 + x2 + x3)) # sin sorpresa, los betas son los mismos que inventamos nosotros.
# Variable Omitida: Que pasa con nuestros coeficientes cuando se nos queda una
# variable afuera?
summary(lm(y ~ x1)) # sin sorpresa, los betas son los mismos que inventamos nosotros.
# Variable Omitida: Que pasa con nuestros coeficientes cuando se nos queda una
# variable afuera?
summary(lm(y ~ x1 + x2)) # sin sorpresa, los betas son los mismos que inventamos nosotros.
y
summary(modelo.1)
