library(haven)
Obama <- read_dta("~/RU/Teaching/Metodos_de_Investigacion/Lectures/Clase19/Obama.dta")
dat = Obama
# install.packages("foreign")
# library(foreign) # significa "foraneo"
# dat <- read.dta("Obama.dta")
#
dat$Obamafav <- as.numeric(jitter(dat$Obamafav, factor=2, amount = 1))
dat$ideology <- as.numeric(jitter(dat$ideology, factor=2, amount = 1))
# ECT: Errores Cuadrados Totales
y <- as.matrix(dat$Obamafav) # extraer y
n = nrow(dat) # extraer n
x = matrix(c(unos,dat$income, dat$education, dat$age, dat$sex, dat$ideology), ncol = 6)
options(scipen = 1000000) # apagar notacion cientifica.
# Saquemos el r2 del modelo.entero.
# Recuerda, este era nuestro modelo
modelo.entero = lm(Obamafav ~ income + education + age + sex + ideology, dat)
summary(modelo.entero) # resumen
summary(modelo.entero)$r.squared # r2
# La formula de r2 es ECR/ECT
# ECT: Errores Cuadrados Totales
y <- as.matrix(dat$Obamafav) # extraer y
n = nrow(dat) # extraer n
ECT = t(y) %*% y - (1/n)*t(y)%*%y
# Si te fijas, los ECT's se construyen solamente ocupando la matriz "y"
# Ahora calculemos Errores Cuadrados del Residuo. A diferencia de los ECTs,
# ahora incorporaremos en nuestro calculo los betas y la matriz "x".
# Aqui creamos un objeto "x" que sera tipo "matrix". Ponemos todo dentro de
# una columna "c", y esa columna, la dividimos en 6 columnas (ncol=6).
# Pero antes, creamos una fila de 1's para calcular beta0 (intercepto).
unos = rep(1, nrow(dat)) # Esto para sacar el intercepto.
x = matrix(c(unos,dat$income, dat$education, dat$age, dat$sex, dat$ideology), ncol = 6)
head(x) # veamos como queda
# Como necesitamos los betas para usar nuestra formula de los Errores Cuadrados
# del Residuo, es necesario calcular los betas. Ya conocemos esta formula...
b = inv(t(x) %*% x) %*% t(x)%*%y # formula para sacar betas
# install.packages("matlib")
library(matlib) # para invertir matrices
# Como necesitamos los betas para usar nuestra formula de los Errores Cuadrados
# del Residuo, es necesario calcular los betas. Ya conocemos esta formula...
b = inv(t(x) %*% x) %*% t(x)%*%y # formula para sacar betas
sum(y)^2
## Total Sum of Squares
SStotal = (t(y) %*% y) - (sum(y)^2/n)
SSreg/SStotal
## Regression Sum of Squares
SSreg = (t(b) %*% t(x) %*% y) - (sum(y)^2/n)
## Total Sum of Squares
SStotal = (t(y) %*% y) - (sum(y)^2/n)
SSreg/SStotal
summary(modelo.entero)$r.squared # r2
modelo.entero
x = matrix(c(dat$income, dat$education, dat$age, dat$sex, dat$ideology), ncol = 6)
# ECT: Errores Cuadrados Totales
y <- as.matrix(dat$Obamafav) # extraer y
n = nrow(dat) # extraer n
ECT = t(y) %*% y - (1/n)*t(y)%*%y
# Si te fijas, los ECT's se construyen solamente ocupando la matriz "y"
# Ahora calculemos Errores Cuadrados del Residuo. A diferencia de los ECTs,
# ahora incorporaremos en nuestro calculo los betas y la matriz "x".
# Aqui creamos un objeto "x" que sera tipo "matrix". Ponemos todo dentro de
# una columna "c", y esa columna, la dividimos en 6 columnas (ncol=6).
# Pero antes, creamos una fila de 1's para calcular beta0 (intercepto).
unos = rep(1, nrow(dat)) # Esto para sacar el intercepto.
x = matrix(c(dat$income, dat$education, dat$age, dat$sex, dat$ideology), ncol = 5)
head(x) # veamos como queda
# install.packages("matlib")
library(matlib) # para invertir matrices
# Como necesitamos los betas para usar nuestra formula de los Errores Cuadrados
# del Residuo, es necesario calcular los betas. Ya conocemos esta formula...
b = inv(t(x) %*% x) %*% t(x)%*%y # formula para sacar betas
# Errores Cuadrados del Residuo
ECR = t(b)%*%t(x)%*%y
# Ahora sacamos el r2
1-(ECR/ECT)
## Regression Sum of Squares
SSreg = (t(b) %*% t(x) %*% y) - (sum(y)^2/n)
## Total Sum of Squares
SStotal = (t(y) %*% y) - (sum(y)^2/n)
SSreg/SStotal
summary(modelo.entero)$r.squared # r2
1-SSreg/SStotal
# ECT: Errores Cuadrados Totales
y <- as.matrix(dat$Obamafav) # extraer y
n = nrow(dat) # extraer n
ECT = t(y) %*% y - (1/n)*t(y)%*%y
# Si te fijas, los ECT's se construyen solamente ocupando la matriz "y"
# Ahora calculemos Errores Cuadrados del Residuo. A diferencia de los ECTs,
# ahora incorporaremos en nuestro calculo los betas y la matriz "x".
# Aqui creamos un objeto "x" que sera tipo "matrix". Ponemos todo dentro de
# una columna "c", y esa columna, la dividimos en 6 columnas (ncol=6).
# Pero antes, creamos una fila de 1's para calcular beta0 (intercepto).
unos = rep(1, nrow(dat)) # Esto para sacar el intercepto.
x = matrix(c(unos, dat$income, dat$education, dat$age, dat$sex, dat$ideology), ncol = 6)
head(x) # veamos como queda
# install.packages("matlib")
library(matlib) # para invertir matrices
# Como necesitamos los betas para usar nuestra formula de los Errores Cuadrados
# del Residuo, es necesario calcular los betas. Ya conocemos esta formula...
b = inv(t(x) %*% x) %*% t(x)%*%y # formula para sacar betas
# Errores Cuadrados del Residuo
ECR = t(b)%*%t(x)%*%y
# Ahora sacamos el r2
1-(ECR/ECT)
summary(modelo.entero)$r.squared # r2
## Residual Sum of Squares
resid = (t(y) %*% y) - t(b) %*% t(x) %*% y
resid/SStotal
1- resid/SStotal
summary(modelo.entero)$r.squared # r2
summary(modelo.entero)
####
e = modelo.entero$residuals
####
e = modelo.entero$residuals
y = dat$Obamafav
# SSresid
SSresid = t(e) %*% e
## SStotal
SStotal = t(y) %*% y
## SSreg
SSreg = SStotal - SSresid
SSreg
## r2
SSreg/SStotal
summary(modelo.entero)$r.squared # r2
## r2
1-SSreg/SStotal
# SSresid
SSresid = t(e) %*% e
## SStotal
SStotal = t(y) %*% y
## SSreg
SSreg = SStotal - SSresid
## r2
SSreg/SStotal
summary(modelo.entero)$r.squared # r2
summary(modelo.entero) # resumen
b = inv(t(x) %*% x) %*% t(x)%*%y # formula para sacar betas
b
####
e = modelo.entero$residuals
y = dat$Obamafav
# SSresid
SSresid = t(e) %*% e
## SStotal
SStotal = t(y) %*% y
## SSreg
SSreg = SStotal - SSresid
## r2
SSreg/SStotal
summary(modelo.entero)$r.squared # r2
resid = t(y) %*% y - t(b) %*% t(x) %*% y
total = t(y) %*% y
resid/total
