world <- ne_countries(scale = "medium", returnclass = "sf")
# instalar librerias (OJO: podemos cargamos varias al mismo tiempo, si lo hacemos escribiendo un vector "c" ).
install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel", "ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata"))
# cargamos algunas de estas librerias
library("ggplot2")
theme_set(theme_bw()) # seteamos el tema "black and white" para no tener ese fondo plomo que siempre tiene GGPLOT. Se ve mejor, mas limpio.
library("sf")
library("sf", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("rnaturalearth") # libreria con todos los mapas del mundo
library("rnaturalearthdata") # libreria complementaria de "rnaturalearth"
library("rnaturalearth", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
# instalar libreria
install.package("ggplot2")
# cargar libreria
library(ggplot2)
# instalar libreria
install.packages("ggplot2")
# cargar libreria
library(ggplot2)
options(scipen=999) # Apagar notacion cientifica
ggplot(midwest, aes(x=area, y=poptotal)) + geom_point()
ggplot(midwest, aes(x=log(area), y=log(poptotal))) + geom_point() # Logeado
ggplot(midwest, aes(x=log(area), y=log(poptotal))) + geom_point() + geom_smooth(method="lm") # con linea
# Altamente customizable
ggplot(midwest, aes(x=log(area), y=log(poptotal))) + geom_point(col="steelblue", size=3) + geom_smooth(method="lm") # Color azul
ggplot(midwest, aes(x=log(area), y=log(poptotal))) + geom_point(aes(col=state), size=3) + geom_smooth(method="lm") # Color by state
ggplot(midwest, aes(x=log(area), y=log(poptotal))) + geom_point(aes(col=state), size=3, alpha=0.5) + geom_smooth(method="lm") # Alpha
ggplot(midwest, aes(x=log(area), y=log(poptotal))) + geom_point(aes(shape=state), colour = "red", size=3, alpha=0.5) + geom_smooth(method="lm") # Forma del punto, segun estado.
ggplot(midwest, aes(x=log(area), y=log(poptotal))) + geom_point(aes(shape=state), colour = "red", size=3, alpha=0.5) + geom_smooth(method="lm") + theme_bw() #  Cambio de "tema de colores"
ggplot(midwest, aes(x=log(area), y=log(poptotal))) + geom_point(aes(shape=state), colour = "red", size=3, alpha=0.5) + geom_smooth(method="lm") + theme_bw() + labs(title="Area y Población", y="Población", x="Área", caption="Base de datos 'Midwest'") # Cambio en los titulos de los ejes.
# instalar librerias (OJO: podemos cargamos varias al mismo tiempo, si lo hacemos escribiendo un vector "c" ).
install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel", "ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata"))
install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel", "ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata"))
install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel", "ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata"))
install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel", "ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata"))
# cargamos algunas de estas librerias
library("ggplot2")
theme_set(theme_bw()) # seteamos el tema "black and white" para no tener ese fondo plomo que siempre tiene GGPLOT. Se ve mejor, mas limpio.
library("sf")
library("rnaturalearth") # libreria con todos los mapas del mundo
library("rnaturalearthdata") # libreria complementaria de "rnaturalearth"
world <- ne_countries(scale = "medium", returnclass = "sf")
install.packages("rgeos")
library("sf")
library("rnaturalearth") # libreria con todos los mapas del mundo
library("rnaturalearthdata") # libreria complementaria de "rnaturalearth"
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
# grafico basico del mundo
ggplot(data = world) + geom_sf()
# agreguemosle un poco de color...
ggplot(data = world) + geom_sf(color = "black", fill = "lightgreen") # pero esta coloracion no aporta mucha informacion...
# agreguemosle un poco de color...pero con algo mas de significado.
ggplot(data = world) + geom_sf(aes(fill = pop_est)) + scale_fill_viridis_c(option = "plasma", trans = "sqrt")
# tratemos de plotear el  Golfo de Mexico...para eso, cambiamos las coordenadas.
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-102.15, -74.12), ylim = c(7.65, 33.97))
??coord_sf
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-85, -40), ylim = c(7.65, 33.97))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-85, -40), ylim = c(-20, 33.97))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-78, -72), ylim = c(-27.65, 33.97))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-78, -40), ylim = c(-27.65, 33.97))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-80, -40), ylim = c(-27.65, 33.97))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-80, -38), ylim = c(-27.65, 33.97))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-80, -30), ylim = c(-27.65, 33.97))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-80, -33), ylim = c(-27.65, 33.97))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-80, -35), ylim = c(-27.65, 33.97))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-85, -35), ylim = c(-27.65, 33.97))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-83, -35), ylim = c(-27.65, 33.97))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-80, -35), ylim = c(-27.65, 33.97))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-81, -35), ylim = c(-27.65, 33.97))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-81, -35), ylim = c(-15, 33.97))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-81, -35), ylim = c(-35, 33.97))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-81, -35), ylim = c(-35, 15))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-81, -35), ylim = c(-35, -15))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-81, -35), ylim = c(-35, -25))
33.97
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-81, -35), ylim = c(-35, 33.97))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-81, -35), ylim = c(-45, 33.97))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-81, -35), ylim = c(-55, 33.97))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-82, -35), ylim = c(-55, 33.97))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-83, -35), ylim = c(-55, 33.97))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-84, -35), ylim = c(-55, 33.97))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-84, -35), ylim = c(-55, 20))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-84, -35), ylim = c(-55, -20))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-84, -35), ylim = c(-55, 31))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-84, -35), ylim = c(-55, 5))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-84, -35), ylim = c(-55, 10))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-84, -35), ylim = c(-55, 12))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-84, -35), ylim = c(-55, 12)) + geom_text(data= world_points,aes(x=X, y=Y, label=name), color = "darkblue", fontface = "bold", check_overlap = FALSE)
world_points<- st_centroid(world)
world_points <- cbind(world, st_coordinates(st_centroid(world$geometry)))
ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-84, -35), ylim = c(-55, 12)) + geom_text(data= world_points,aes(x=X, y=Y, label=name), color = "darkblue", fontface = "bold", check_overlap = FALSE)
world_points
# Ahora, veamos lo mismo, pero con GGplot
install.packages("dslabs") # carguemos otra base de datos
library("dslabs") # llamemos a la libreria
data(package="dslabs")
data(polls_us_election_2016)
polls_us_election_2016 %>%
filter(state == "U.S." & enddate>="2016-07-01") %>%
select(enddate, pollster, rawpoll_clinton, rawpoll_trump) %>%
rename(Clinton = rawpoll_clinton, Trump = rawpoll_trump) %>%
gather(candidate, percentage, -enddate, -pollster) %>%
mutate(candidate = factor(candidate, levels = c("Trump","Clinton")))%>%
group_by(pollster) %>%
filter(n()>=10) %>%
ungroup() %>%
ggplot(aes(enddate, percentage, color = candidate)) +
geom_point(show.legend = FALSE, alpha=0.4)  +
geom_smooth(method = "loess", span = 0.15) +
scale_y_continuous(limits = c(30,50))
data("heights")
heights %>%
ggplot(aes(height, fill=sex)) +
geom_density(alpha = 0.2)
install.packages("dslabs")
library("dslabs")
data(package="dslabs")
data(divorce_margarine)
colnames(divorce_margarine)
View(divorce_margarine)
View(trump_tweets)
is(trump_tweets$created_at)
View(greenhouse_gases)
View(divorce_margarine)
data(divorce_margarine)
plot(Prestige$prestige, Prestige$income) # Que podemos concluir?
divorce_margarine
ggplot(divorce_margarine, aes(x=year, y=c(divorce_rate_maine))) + geom_point() + geom_smooth(method="lm") # con linea
ggplot(divorce_margarine, aes(x=year, y=c(divorce_rate_maine,margarine_consumption_per_capita))) + geom_point() + geom_smooth(method="lm") # con linea
ggplot(divorce_margarine, aes(x=year, y=margarine_consumption_per_capita)) + geom_point() + geom_smooth(method="lm") # con linea
ggplot(divorce_margarine, aes(x=year, y=margarine_consumption_per_capita, divorce_rate_maine)) + geom_point() + geom_smooth(method="lm") # con linea
ggplot(divorce_margarine, aes(x=year, y=margarine_consumption_per_capita, divorce_rate_maine)) + geom_point()
ggplot(divorce_margarine, aes(x=year, y=margarine_consumption_per_capita)) + geom_point(divorce_rate_maine)
p1 = ggplot(divorce_margarine, aes(x=year, y=margarine_consumption_per_capita)) + geom_point()
p1 + ggplot(divorce_margarine, aes(x=year, y=divorce_rate_maine)) + geom_point()
ggplot(divorce_margarine, aes(x=year, y=margarine_consumption_per_capita)) + geom_point(aes(x=year, y=divorce_rate_maine))
ggplot(divorce_margarine, aes(x=year)) + geom_point(aes(x=year, y=divorce_rate_maine))
ggplot(divorce_margarine, aes(x=year)) +
geom_point(aes(x=year, y=divorce_rate_maine)) +
geom_point(aes(x=year, y=margarine_consumption_per_capita))
ggplot(midwest, aes(x=log(area), y=log(poptotal))) + geom_point() + geom_smooth(method="lm") # con linea
ggplot(midwest, aes(x=log(area))) + geom_point(y=log(poptotal)) + geom_smooth(method="lm") # con linea
ggplot(midwest, aes(x=log(area))) + geom_point(y=log(midwest$poptotal)) + geom_smooth(method="lm") # con linea
ggplot(midwest, aes(x=log(area))) + geom_point(y=log(midwest$poptotal))# + geom_smooth(method="lm") # con linea
ggplot(midwest, aes(x=log(area), y=log(poptotal))) + geom_point(aes(shape=state), colour = "red", size=3, alpha=0.5) + geom_smooth(method="lm") # Forma del punto, segun estado.
midwest
colnames(ggplot(divorce_margarine, aes(x=year)) +
geom_point(aes(x=year, y=divorce_rate_maine)) +
geom_point(aes(x=year, y=margarine_consumption_per_capita))
)
colnames(midwest)
ggplot(midwest, aes(x=log(area), y=log(poptotal))) + geom_point(aes(shape=state), colour = "red", size=3, alpha=0.5) + geom_smooth(method="lm") + theme_bw() + labs(title="Area y Población", y="Población", x="Área", caption="Base de datos 'Midwest'") # Cambio en los titulos de los ejes.
ggplot(midwest, aes(x=log(area))) +
geom_point(aes(shape=state, y=log(poptotal)), colour = "red", size=3, alpha=0.5) +
geom_smooth(method="lm") +
theme_bw() +
labs(title="Area y Población", y="Población", x="Área", caption="Base de datos 'Midwest'")
ggplot(midwest, aes(x=log(area))) +
geom_point(aes(shape=state, y=log(poptotal)), colour = "red", size=3, alpha=0.5) +
# geom_smooth(method="lm") +
theme_bw() +
labs(title="Area y Población", y="Población", x="Área", caption="Base de datos 'Midwest'")
ggplot(midwest, aes(x=log(area))) +
geom_point(aes(shape=state, y=log(poptotal)), colour = "red", size=3, alpha=0.5) +
geom_point(aes(shape=state, y=log(inmetro)), colour = "red", size=3, alpha=0.5) +
theme_bw() +
labs(title="Area y Población", y="Población", x="Área", caption="Base de datos 'Midwest'")
ggplot(midwest, aes(x=log(area))) +
geom_point(aes(shape=state, y=log(poptotal)), colour = "red", size=3, alpha=0.5) +
geom_point(aes(shape=state, y=log(inmetro)), colour = "green", size=3, alpha=0.5) +
theme_bw() +
labs(title="Area y Población", y="Población", x="Área", caption="Base de datos 'Midwest'")
ggplot(midwest, aes(x=log(area))) +
geom_point(aes(shape=state, y=log(poptotal)), colour = "red", size=3, alpha=0.5) +
geom_point(aes(shape=state, y=inmetro), colour = "green", size=3, alpha=0.5) +
theme_bw() +
labs(title="Area y Población", y="Población", x="Área", caption="Base de datos 'Midwest'")
ggplot(midwest, aes(x=log(area))) +
geom_point(aes(shape=state, y=log(poptotal)), colour = "red", size=3, alpha=0.5) +
geom_point(aes(shape=state, y=percadultpoverty), colour = "green", size=3, alpha=0.5) +
theme_bw() +
labs(title="Area y Población", y="Población", x="Área", caption="Base de datos 'Midwest'")
ggplot(midwest, aes(x=log(area))) +
geom_point(aes(shape=state, y=poptotal), colour = "red", size=3, alpha=0.5) +
geom_point(aes(shape=state, y=percadultpoverty), colour = "green", size=3, alpha=0.5) +
theme_bw() +
labs(title="Area y Población", y="Población", x="Área", caption="Base de datos 'Midwest'")
ggplot(midwest, aes(x=log(area))) +
geom_point(aes(shape=state, y=log(poptotal)), colour = "red", size=3, alpha=0.5) +
geom_point(aes(shape=state, y=log(inmetro)), colour = "green", size=3, alpha=0.5) +
theme_bw() +
labs(title="Area y Población", y="Población", x="Área", caption="Base de datos 'Midwest'")
ggplot(midwest, aes(x=log(area))) +
geom_point(aes(shape=state, y=log(poptotal)), colour = "red", size=3, alpha=0.5) +
geom_point(aes(shape=state, y=percblack), colour = "green", size=3, alpha=0.5) +
theme_bw() +
labs(title="Area y Población", y="Población", x="Área", caption="Base de datos 'Midwest'")
ggplot(midwest, aes(x=area)) +
geom_point(aes(shape=state, y=log(poptotal)), colour = "red", size=3, alpha=0.5) +
geom_point(aes(shape=state, y=percblack), colour = "green", size=3, alpha=0.5) +
theme_bw() +
labs(title="Area y Población", y="Población", x="Área", caption="Base de datos 'Midwest'")
# en este grafico usamos geom_point dos veces. una para poner los puntos del log(poptotal) y otra para los puntos de "percblack" (% de Afro americanos).
ggplot(midwest, aes(x=area)) +
geom_point(aes(y=log(poptotal)), colour = "red", size=3, alpha=0.5) +
geom_point(aes(y=percblack), colour = "green", size=3, alpha=0.5) +
theme_bw() +
labs(title="Area y Población", y="Población", x="Área", caption="Base de datos 'Midwest'")
# en este grafico usamos geom_point dos veces. una para poner los puntos del log(poptotal) y otra para los puntos de "percblack" (% de Afro americanos).
ggplot(midwest, aes(x=area)) +
geom_point(aes(y=poptotal), colour = "red", size=3, alpha=0.5) +
geom_point(aes(y=percblack), colour = "green", size=3, alpha=0.5) +
theme_bw() +
labs(title="Area y Población", y="Población", x="Área", caption="Base de datos 'Midwest'")
# en este grafico usamos geom_point dos veces. una para poner los puntos del log(poptotal) y otra para los puntos de "percblack" (% de Afro americanos).
ggplot(midwest, aes(x=area)) +
geom_point(aes(y=log(poptotal)), colour = "red", size=3, alpha=0.5) +
geom_point(aes(y=percblack), colour = "green", size=2, alpha=0.5) +
theme_bw() +
labs(title="Area y Población", y="Población", x="Área", caption="Base de datos 'Midwest'")
# en este grafico usamos geom_point dos veces. una para poner los puntos del log(poptotal) y otra para los puntos de "percblack" (% de Afro americanos).
ggplot(midwest, aes(x=area)) +
geom_point(aes(y=log(poptotal)), colour = "red", size=3, alpha=0.5) +
geom_point(aes(y=percblack), colour = "green", size=1, alpha=0.5) +
theme_bw() +
labs(title="Area y Población", y="Población", x="Área", caption="Base de datos 'Midwest'")
# en este grafico usamos geom_point dos veces. una para poner los puntos del log(poptotal) y otra para los puntos de "percblack" (% de Afro americanos).
ggplot(midwest, aes(x=area)) +
geom_point(aes(y=log(poptotal)), colour = "red", size=3, alpha=0.5) +
geom_point(aes(y=percblack), colour = "green", size=2, alpha=0.5) +
theme_bw() +
labs(title="Area y Población", y="Población", x="Área", caption="Base de datos 'Midwest'")
# en este grafico usamos geom_point dos veces. una para poner los puntos del log(poptotal) y otra para los puntos de "percblack" (% de Afro americanos).
ggplot(midwest, aes(x=log(area=1))) +
geom_point(aes(y=log(poptotal)), colour = "red", size=3, alpha=0.5) +
geom_point(aes(y=percblack), colour = "green", size=2, alpha=0.5) +
theme_bw() +
labs(title="Area y Población", y="Población", x="Área", caption="Base de datos 'Midwest'")
# en este grafico usamos geom_point dos veces. una para poner los puntos del log(poptotal) y otra para los puntos de "percblack" (% de Afro americanos).
ggplot(midwest, aes(x=log(area+1))) +
geom_point(aes(y=log(poptotal)), colour = "red", size=3, alpha=0.5) +
geom_point(aes(y=percblack), colour = "green", size=2, alpha=0.5) +
theme_bw() +
labs(title="Area y Población", y="Población", x="Área", caption="Base de datos 'Midwest'")
# en este grafico usamos geom_point dos veces. una para poner los puntos del log(poptotal) y otra para los puntos de "percblack" (% de Afro americanos).
ggplot(midwest, aes(x=area)) +
geom_point(aes(y=log(poptotal)), colour = "red", size=3, alpha=0.5) +
geom_point(aes(y=percblack), colour = "green", size=2, alpha=0.5) +
theme_bw() +
labs(title="Area y Población", y="Población", x="Área", caption="Base de datos 'Midwest'")
divorce_margarine
ggplot(divorce_margarine, aes(x=year)) +
geom_point(aes(y=divorce_rate_maine), colour = "red", size=3, alpha=0.5) +
geom_point(aes(y=margarine_consumption_per_capita), colour = "green", size=2, alpha=0.5) +
theme_bw()
ggplot(divorce_margarine, aes(x=year)) +
geom_point(aes(y=divorce_rate_maine), size=3, alpha=0.5) +
geom_point(aes(y=margarine_consumption_per_capita), size=2, alpha=0.5) +
theme_bw() +
labs(title="Area y Población", y="Población", x="Área", caption="Base de datos 'Midwest'")
ggplot(divorce_margarine, aes(x=year)) +
geom_point(aes(y=divorce_rate_maine), size=3, alpha=0.5) +
geom_point(aes(y=margarine_consumption_per_capita), size=2, alpha=0.5)
View(olive)
is(olive$area)
levels(olive$area)
admissions
is(admissions$gender)
divorce_margarine
ggplot(divorce_margarine, aes(x=year)) +
geom_point(aes(y=divorce_rate_maine), colour = "red", size=3, alpha=0.5) +
geom_point(aes(y=margarine_consumption_per_capita), colour = "green", size=2, alpha=0.5)
ggplot(divorce_margarine, aes(x=year)) +
geom_point(aes(y=log(divorce_rate_maine)), colour = "red", size=3, alpha=0.5) +
geom_point(aes(y=margarine_consumption_per_capita), colour = "green", size=2, alpha=0.5) +
theme_bw() +
labs(title="Area y Población", y="Población", x="Área", caption="Base de datos 'Midwest'")
ggplot(divorce_margarine, aes(x=year)) +
geom_point(aes(y=divorce_rate_maine), colour = "red", size=3, alpha=0.5) +
geom_point(aes(y=log(margarine_consumption_per_capita)), colour = "green", size=2, alpha=0.5) +
theme_bw() +
labs(title="Area y Población", y="Población", x="Área", caption="Base de datos 'Midwest'")
margarine_consumption_per_capita
View(polls_2008)
load("/Users/hectorbahamonde/Downloads/ICPSR_35299/DS0001/35299-0001-Data.rda")
load(".../ICPSR_35299/DS0001/35299-0001-Data.rda")
load("/../ICPSR_35299/DS0001/35299-0001-Data.rda")
load("/ICPSR_35299/DS0001/35299-0001-Data.rda")
View(da35299.0001)
install.packages("prettyR")
library(prettyR)
lbls <- sort(levels(da99999.0001$MYVAR))
base = da35299.0001
base$ACTIV_1A
table(base$ACTIV_1A)
table(base$ACTIV_1C)
plot(P5, P128)
plot(base$P5, base$P128)
plot(base$P128, base$P5)
base$P128
plot(base$P128, as.factor(base$P5))
plot(as.factor(base$P128), as.factor(base$P5))
plot(as.numeric(base$P128), as.factor(base$P5))
plot(as.factor(base$P128), as.numeric(base$P5))
base$P5
plot(as.factor(base$P128), P8_1)
plot(as.factor(base$P128), base$P8_1)
base$P8_1
plot(as.factor(base$P128), as.factor(base$P8_1))
base$P114
plot(base$P114)
hist(base$P114)
plot(base$P114, base$P128) # numerica
plot(base$P114, as.factor(base$P128)) # numerica
plot(base$P114) # numerica
hist(base$P114) # numerica
summary(base$P114) # numerica
base$P132_1
hist(base$P132_1)
hist(base$p132_1)
hist(as.numeric(base$P132_1))
?sim
help(sim)
??simulation
?rnorm
dnorm(100, mean = 0, sd = 1, log = FALSE)
dnorm(100, mean = 0, sd = 1)
dnorm(3, mean = 0, sd = 1)
rep(dnorm(3, mean = 0, sd = 1), 100)
replicate(dnorm(3, mean = 0, sd = 1), 100)
replicate(100, dnorm(3, mean = 0, sd = 1))
system.time(
x1 <- replicate(reps, sum(rexp(n=nexps, rate=rate)))
)
reps <- 50000
nexps <- 5
rate <- 0.1
set.seed(0)
replicate(reps, sum(rexp(n=nexps, rate=rate)))
replicate(reps, dnorm(3, mean = 0, sd = 1))
replicate(reps, sum(dnorm(3, mean = 0, sd = 1)))
replicate(reps, sum(dnorm(4, mean = 0, sd = 1)))
rnorm(1000, 0, 1)
set.seed(0)
rnorm(1000, 0, 1)
plot(rnorm(1000, 0, 1))
hist(rnorm(1000, 0, 1))
rnorm(1000, 0, 1)
rnorm(12000, 0, 1)
uno = rnorm(12000, 0, 1)
log(uno)
abs(uno)
help(abs)
sqrt(log(uno))
abs(log(uno))
log(sqrt(uno))
uno = rnorm(12000, 0, 1)
sqrt(uno)
uno
##
set.seed(198911)
rpois(100,5)
rnorm(12000, 0, 1)
exp(rnorm(12000, 0, 1))
