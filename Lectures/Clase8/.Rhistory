cat("\014")
rm(list=ls())
graphics.off()
if (!require("pacman")) install.packages("pacman")
if (!require("pacman")) install.packages("pacman"); library(pacman) # Ahora cargaremos "pacman"
p_load(cem) # y aqui le decimos a pacman que revise si tienes el paquete "cem" que utilizaremos para el sgte. ej. Si no lo tienes, lo instalará, y lo llamará.
# En la libreria "cem" vive una base de datos muy famosa, conocida como LaLonde. Carguemosla para la sgte. actividad.
data(LL)
data(LL)
p_load(cem) # y aqui le decimos a pacman que revise si tienes el paquete "cem" que utilizaremos para el sgte. ej. Si no lo tienes, lo instalará, y lo llamará.
# En la libreria "cem" vive una base de datos muy famosa, conocida como LaLonde. Carguemosla para la sgte. actividad.
data(LL)
library("cem", lib.loc="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
detach("package:cem", unload=TRUE)
remove.packages("cem")
p_load(cem) # y aqui le decimos a pacman que revise si tienes el paquete "cem" que utilizaremos para el sgte. ej. Si no lo tienes, lo instalará, y lo llamará.
# En la libreria "cem" vive una base de datos muy famosa, conocida como LaLonde. Carguemosla para la sgte. actividad.
data(LL)
install.packages("cem")
p_load(cem) # y aqui le decimos a pacman que revise si tienes el paquete "cem" que utilizaremos para el sgte. ej. Si no lo tienes, lo instalará, y lo llamará.
library(cem)
base = data.frame(
nombre = c("Pedro", "Juan", "Diego"),
educacion = c(57,50,61), # vector de educacion
prestigio = c(64,53,67)
)
base
plot(base$educacion,base$prestigio) # Que tipo de relacion es esta? Positiva? Negativa?
# Ahora creemos un modelo, es decir, estimemos beta_1
modelo = lm(prestigio ~ educacion, data = base)
modelo # veamos que nos dice nuestro "modelo"
base$prestigio[1]
as.numeric(modelo$coefficients[1])
as.numeric(modelo$coefficients[2])
modelo$coefficients[2]
as.numeric(modelo$coefficients[2])
base$error <- c(
base$prestigio[1] - as.numeric(modelo$coefficients[1]) - (base$educacion[1] * as.numeric(modelo$coefficients[2])),
base$prestigio[2] - as.numeric(modelo$coefficients[1]) - (base$educacion[2] * as.numeric(modelo$coefficients[2])),
base$prestigio[3] - as.numeric(modelo$coefficients[1]) - (base$educacion[3] * as.numeric(modelo$coefficients[2]))
)
base
x=base$educacion # crea objeto
y=base$prestigio  # crea objeto
lm.out <- lm(y ~ x) # estima modelo de nuevo. el mismo modelo.
newx = seq(min(x),max(x),by = 1) # crea sequencia de numeros para el rango X del grafico
conf_interval <- predict(lm.out, newdata=data.frame(x=newx), interval="confidence",
level = 0.95) # usando el modelo estimado, predice (a) distintos valores de educacion NO OBSERVADOS (fit), y el 95% de intervalo de confianza, con "lower bound" o "lwr" (parte de ABAJO del intervalo), y "upper bound" o "upr" (parte de ARRIBA del intervalo).
plot(x, y, xlab="Educ", ylab="Prest", main="Regression", ylim = c(30,90)) # ploteamos
abline(lm.out, col="lightblue") # agregamos linea "fit"
lines(newx, conf_interval[,2], col="blue", lty=2) # lower bound
lines(newx, conf_interval[,3], col="blue", lty=2) # upper bound
